rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
  	function isAuth() {
    	return request.auth != null;
    }
    
    function isAdmin() {
    	let address = /databases/$(database)/documents/roles/admins;
      return isAuth() && (request.auth.uid in get(address));
    }
    
    function isOwner(owner) {
    	return isAuth() && request.auth.uid == owner;
    }
    
    
    match /{document=**} {
      allow read, write: if false;
    }
    
    match /roles/{document=**} {
      allow read: if isAuth();
      allow write: if isAdmin();
    }

    match /{path=**}/robots/{robot} {
      allow read: if isAuth();
    }

    match /users/{userId} {
      allow read : if isAuth();
      allow write : if isOwner(userId);

      allow read, write : if isAdmin();
    }
    match /users/{userId}/notif/{document} {
      allow read, write : if isOwner(userId);
      allow read, write : if isAdmin();
    }
    match /editions/{edition} {
    	allow read : if isAuth();

      match /robots/{robot} {
        allow read : if isAuth();
        allow create : if isOwner(request.resource.data.owner);
        allow write, delete: if isOwner(resource.data.owner);
        allow read, write : if isAdmin();

        match /status/{status} {
        	allow read : if isAuth();
          allow write : if isAdmin();
        }
      }
    }


  }
}

